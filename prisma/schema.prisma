// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  createdAt DateTime
  updatedAt DateTime
  Posts     Post[]
  Likes Like[]
  Comments Comment[]
}

model Post {
  id        Int       @id @default(autoincrement())
  userId    Int
  caption   String
  createdAt DateTime
  updatedAt DateTime
  User      User      @relation(fields: [userId], references: [id])
  PostUrl   PostUrl[]
  Likes   Like[]
  Comments Comment[]
}

model PostUrl {
  id        Int      @id @default(autoincrement())
  urls      String
  postId    Int
  Post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime
  updatedAt DateTime
}

model Like{
  id Int @id @default(autoincrement())
  userId Int
  postId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User User @relation(fields: [userId],references: [id])
  Post Post @relation(fields: [postId],references: [id])
}

model Comment{
   id Int @id @default(autoincrement())
   content String
   userId  Int
   postId Int 
   User User @relation(fields: [userId],references: [id])
   Post Post @relation(fields: [postId],references: [id])
   createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}